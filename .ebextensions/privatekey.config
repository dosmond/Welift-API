Parameters:
  bucket:
    Type: CommaDelimitedList
    Description: "Name of the Amazon S3 bucket that contains your file"
    Default: '`{"Fn::GetOptionSetting": {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "JWT_KEY_BUCKET", "DefaultValue": "jwtkeys"}}`'
  fileuri4:
    Type: String
    Description: "Path to google json"
    Default: '`{"Fn::GetOptionSetting": {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "GOOGLE_LOCATION", "DefaultValue": "file_path"}}`'
  authrole:
    Type: String
    Description: "Role with permissions to download the file from Amazon S3"
    Default: "aws-elasticbeanstalk-ec2-role"

files:
  "/tmp/google-service.json":
    mode: "000400"
    owner: webapp
    group: webapp
    source: { "Ref" : "fileuri4" }
    authentication: S3AccessCred

Resources:
  AWSEBAutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCred:
          type: "S3"
          roleName: { "Ref" : "authrole" }
          buckets: { "Ref" : "bucket" }

container_commands:
  file_transfer_1:
    command: "mkdir -p -m 777 keys"

  file_transfer_2:
    command: "mv /tmp/google-service.json keys && cp keys/google-service.json /tmp/google-service.json && chmod a+rw /tmp/google-service.json"